initSidebarItems({"fn":[["factory","Attempts to load the factory interface for the given WinRT class."],["heap_alloc",""],["heap_free","Safety"],["sha1",""]],"mod":[["alloc","The Rust core allocation and collections library"]],"struct":[["Array","A WinRT array stores elements contiguously in a heap-allocated buffer."],["ConstBuffer",""],["Digest",""],["Error","A WinRT error object consists of both an error code as well as detailed error information for debugging."],["GUID","A globally unique identifier (GUID) used to identify COM and WinRT interfaces."],["HRESULT","A primitive error code value returned by most COM functions."],["HSTRING","A WinRT string, sometimes called an HSTRING, is reference-counted and logically immutable. It should only be used for communicating with WinRT APIs."],["IActivationFactory","WinRT classes have a supporting factory object that implements `IActivationFactory` to create a new instance of the WinRT class with some default state. `IActivationFactory` represents the IActivationFactory interface."],["IActivationFactory_abi",""],["IAgileObject",""],["IInspectable","A WinRT object that may be used as a polymorphic stand-in for any WinRT class, interface, or boxed value. [`IInspectable`] represents the IInspectable interface."],["IInspectable_abi",""],["IUnknown","All COM interfaces (and thus WinRT classes and interfaces) implement IUnknown under the hood to provide reference-counted lifetime management as well as the ability to query for additional interfaces that the object may implement."],["WaiterSignaler",""],["Weak","`Weak` holds a non-owning reference to an object."]],"trait":[["DefaultType",""],["Handle","Win32 handle types implement this trait to simplify error handling."],["Interface","Provides low-level access to a COM interface."],["ToImpl","A trait for retrieving the implementation behind a COM or WinRT interface."]],"type":[["Result",""]]});