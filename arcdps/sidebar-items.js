initSidebarItems({"constant":[["WM_KEYDOWN",""],["WM_KEYUP",""],["WM_SYSKEYDOWN",""],["WM_SYSKEYUP",""]],"enum":[["UserRole",""]],"fn":[["GetProcAddress",""],["arcdps_version","returns the loaded arcdps version"],["e0",""],["e3",""],["e5",""],["e6",""],["e7",""],["e8",""],["e9",""]],"macro":[["arcdps_export","For documentation on how to use this, visit `SupportedFields`"]],"mod":[["helpers",""]],"struct":[["Agent","Represents an agent in a combat event."],["AgentOwned","An [`Agent`] with an owned [`String`]. For more info see [`Agent`]."],["ArcDpsExport",""],["CombatEvent",""],["RawAgent",""],["RawExtrasAddonInfo",""],["RawExtrasSubscriberInfo",""],["RawUserInfo",""],["SupportedFields","This struct isn’t used anywhere. It is a reference on what fields are currently supported by the [arcdps_export!] macro."],["UserInfo",""],["UserInfoOwned",""]],"type":[["CombatCallback","Provides safe abstractions for the combat event."],["Export0",""],["Export3",""],["Export5",""],["Export6",""],["Export7",""],["Export8",""],["Export9",""],["ExtrasInitFunc","Called at startup of unofficial extras. Can be called before or after arcdps init func. Provides the account name and the version of the unofficial extras addon as parameters."],["ExtrasSquadUpdateCallback",""],["HANDLE",""],["HMODULE",""],["HWND",""],["ImguiCallback","Provides a [imgui::Ui] object that is needed to draw anything. The second parameter is true whenever the player is not in character select, loading screens or forced cameras."],["InitFunc","Gets called on load."],["LPARAM",""],["LPCSTR",""],["LPVOID",""],["OptionsCallback","Provides a [imgui::Ui] object that is needed to draw anything."],["OptionsWindowsCallback","Called per window option checkbox. Does not draw the checkbox if returned true."],["PCCHAR",""],["RawCombatCallback",""],["RawExtrasSubscriberInitSignature","This function must be exported by subscriber addons as `arcdps_unofficial_extras_subscriber_init`. It’s called once at startup. Can be called before or after arcdps calls mod_init. Set [`RawExtrasSubscriberInfo::subscriber_name`] to `nullptr` if initialization fails."],["RawImguiCallback",""],["RawOptionsCallback",""],["RawOptionsWindowsCallback","called once per ‘window’ option checkbox, with null at the end, non-zero return disables arcdps drawing that checkbox"],["RawSquadUpdateCallbackSignature",""],["RawWndprocCallback",""],["ReleaseFunc","Gets called on unload."],["UINT",""],["UserConvert",""],["UserInfoIter",""],["WPARAM",""],["WndProcCallback","Gets called for each key pressed. Returning true will allow arcdps and Gw2 to receive the key press. first parameter indicates the virtual key code (https://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes) second parameter is true if the key was pressed and false when released third parameter is true if the key was down before this event occured, for example by holding it down"]]});