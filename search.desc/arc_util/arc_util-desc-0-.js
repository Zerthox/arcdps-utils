searchState.loadedDescShard("arc_util", 0, "Utilities for interfacing with ArcDPS from Rust.\nLoad/save settings.\nPlayer tracking utilities.\nUI related utilities.\nPlugin update checking.\nLinearly interpolates between two colors.\nLinearly interpolates between two <code>f32</code>s.\nCreates a color from RGB values.\nCreates a color from RGBA values.\nAdjusts the alpha value of a color.\nInterface for components with settings.\nThe component’s settings id.\nSettings state.\nReturns the path to the config file.\nReturns the component’s current settings state.\nCreates new empty settings.\nReturns the argument unchanged.\nCreates new settings from a file.\nCalls <code>U::from(self)</code>.\nLoads a component’s settings from the settings map.\nLoads data from the settings map.\nLoads the settings from the settings file.\nHelper for loading an optional value.\nLoads the component’s settings from a loaded state.\nResets the component’s settings to the defaults.\nSaves settings to the settings file.\nStores a component’s settings in the settings map.\nStores data in the settings map.\nRetrieves the current system time.\nCalculates the time elapsed between the timestamp and now.\nCalculates the time elapsed between an event happening and …\nHow data should be cached.\nAn player entry in the tracker cache.\nPlayer tracker with caching.\nStruct representing a tracker entry.\nDo not cache anything.\nCache one entry per account.\nCache one entry per character.\nStruct representing a player.\nPlayer tracker.\nAccount name of cached player.\nPlayer account name.\nAdds a new tracked player, returning <code>true</code> if cached data …\nAdds a new tracked player.\nAdds a new tracked player with default data, returning <code>true</code>…\nAdds a new tracked player with default data.\nAdds an entry to the cache.\nReturns an iterator over the current cache contents.\nReturns a mutable iterator over the current cache contents.\nReturns the amount of cached entries.\nAdds multiple entries to the cache.\nReturns whether there are any cached entries.\nWhether caching is allowed.\nCharacter name of cached player.\nPlayer character name.\nClears the cache.\nWhether the player is currently in combat.\nData associated with the player.\nElite specialization of cached player.\nCurrent elite specialization the player has equipped.\nEnters the player into combat.\nExits the player from combat.\nCreates a new tracker caching data for own characters and …\nCreates a new tracker caching data for own characters.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new player from tracking change agents.\nReturns a reference to the local player (self).\nReturns a reference to the local player (self).\nReturns a mutable reference to the local player (self).\nReturns a mutable reference to the local player (self).\nPlayer id.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the player is the local player.\nCreates a new cached tracker with the given policies.\nCreates a new player cache entry.\nCreates a new entry.\nCreates a new player.\nCreates a new tracker.\nHow to cache for other players.\nReturns a reference to a tracked player entry.\nReturns a reference to a tracked player entry.\nPlayer this entry corresponds to.\nReturns a mutable reference to a tracked player entry.\nReturns a mutable reference to a tracked player entry.\nProfession of cached player.\nProfession (class) of the player character.\nRemoves a cache entry based on the character name.\nRemoves a tracked player, returning <code>true</code> if the player was …\nRemoves a tracked player, returning the <code>Entry</code> if they were …\nHow to cache for self.\nCurrent squad subgroup the player is in.\nRemoves a tracked player, returning the removed entry if …\nWhether to enable the context menu.\nInterface for UI components.\nWhether to enable the default menu entries.\nInterface for hideable UI components.\nA temporary reference for building the user interface for …\nInterface for windowable UI components.\nHelpers for UI alignment.\nVertically aligns text baseline so that it will align …\nRenders a square button with an arrow shape.\nCreates a combo box which can be appended to with …\nCreates a combo box which can be appended to with …\nCreates a combo box which can be appended to with …\nCreates a combo box which can be appended to with …\nGroups items together as a single item.\nCreates and starts appending to a full-screen menu bar.\nCreates and starts appending to a sub-menu entry.\nCreates and starts appending to the menu bar of the …\nCreates and starts appending to a sub-menu entry.\nConstruct a popup that can have any kind of content.\nBegins a table with no flags and with standard sizing …\nBegins a table with no flags and with standard sizing …\nBegins a table with flags and standard sizing contraints.\nBegins a table with all flags and sizing contraints. This …\nBegins a table with flags and standard sizing contraints.\nBegins a table with all flags and sizing contraints. This …\nConstruct a tooltip window that can have any kind of …\nRenders a small circle and keeps the cursor on the same …\nRenders text with a little bullet aligned to the typical …\nRenders a clickable button.\nRenders a clickable button.\nReturns the width of the item given the pushed settings …\nCalculate the size required for a given text string.\nCalculate the size required for a given text string.\nRenders a simple checkbox.\nRenders a checkbox suitable for toggling bit flags using a …\nReturns the current clipboard contents as text, or None if …\nReturns a clone of the user interface style\nClose a popup. Should be called within the closure given …\nConstructs a new collapsing header\nConstructs a new collapsing header\nReturns the current amount of columns\nReturns the offset of the given column (in pixels from the …\nReturns the width of the given column (in pixels)\nBuilds a simple combo box for choosing from a slice of …\nBuilds a simple combo box for choosing from a slice of …\nEqual to <code>ui.content_region_max()</code> - <code>ui.cursor_pos()</code>\nReturns the current content boundaries (in <em>window </em>…\nReturns the index of the current column\nReturns the offset of the current column (in pixels from …\nReturns the width of the current column (in pixels)\nReturns the current font\nReturns the current font size (= height in pixels) with …\nReturns the cursor position (in window coordinates)\nReturns the cursor position (in absolute screen …\nReturns the initial cursor position (in window coordinates)\nFills a space of <code>size</code> in pixels with nothing on the …\nReturns the UV coordinate for a white pixel.\nReturns an immutable reference to the font atlas\nReturns the global imgui-rs frame count.\nReturns the argument unchanged.\nCreates an Ui object with a given context\nGet access to drawing API\nCreates a layout group and runs a closure to construct the …\nHides the component.\nMoves content position to the right by …\nMoves content position to the right by <code>width</code>\nCalls <code>U::from(self)</code>.\nRenders a widget with button behaviour without the visual …\nRenders a widget with button behaviour without the visual …\nReturns an immutable reference to the inputs/outputs object\nReturns <code>true</code> if any item is active\nReturns <code>true</code> if any item is focused\nReturns <code>true</code> if any item is hovered\nReturns true if any mouse button is held down\nReturns <code>true</code> if the rectangle (of given size, starting …\nReturns <code>true</code> if the last item was just made active\nReturns <code>true</code> if the last item is active\nReturns <code>true</code> if the last item is being clicked by …\nReturns <code>true</code> if the last item is being clicked\nReturns <code>true</code> if the last item was just made inactive\nReturns <code>true</code> if the last item was just made inactive and …\nReturns <code>true</code> if the last item modified its underlying …\nReturns <code>true</code> if the last item is focused for …\nReturns <code>true</code> if the last item is hovered\nReturns <code>true</code> if the last item is hovered based on the …\nReturns <code>true</code> if the last item open state was toggled\nReturns <code>true</code> if the last item is visible\nReturns true if the key is being held.\nSame as <code>is_key_down</code> but takes a key index. The meaning of …\nSame as <code>is_key_pressed</code> but takes a key index.\nSame as <code>is_key_pressed_no_repeat</code> but takes a key index.\nSame as <code>is_key_released</code> but takes a key index.\nReturns true if the key was pressed (went from !down to …\nReturns true if the key was pressed (went from !down to …\nReturns true if the key was released (went from down to …\nReturns true if the given mouse button was clicked (went …\nReturns true if the given mouse button was double-clicked\nReturns true if the given mouse button is held down.\nReturns true if the mouse is currently dragging with the …\nReturns true if the mouse is currently dragging with the …\nReturns true if the mouse is hovering over the given …\nReturns true if the given mouse button was released (went …\nReturns <code>true</code> if the rectangle (in screen coordinates) is …\nReturns whether the component is currently visible.\nReturns true if the current window appeared during this …\nReturns true if the current window is in collapsed state …\nReturns true if the current window is focused\nReturns true if the current window is focused based on the …\nReturns true if the current window is hovered\nReturns true if the current window is hovered based on the …\nReturns the lower-right bounding rectangle of the last …\nReturns the upper-left bounding rectangle of the last item …\nReturns the size of the last item\nReturns a count of key presses using the given repeat …\nRender a text + label combination aligned the same way as …\nLog component.\nCreates a full-screen main menu bar and runs a closure to …\nCreates a menu and runs a closure to construct the …\nCreates a menu bar in the current window and runs a …\nCreates a menu and runs a closure to construct the …\nReturns the currently desired mouse cursor type.\nReturns the delta from the initial position when the left …\nReturns the delta from the initial position when the given …\nReturns the delta from the initial clicking position.\nReturns the mouse position backed up at the time of …\nUndo a <code>same_line</code> call or force a new line when in …\nSwitches to the next column.\nInstructs ImGui to open a popup, which must be began with …\nConstruct a popup that can have any kind of content.\nCreates a PopupModal directly.\nSwitches to the given font by pushing it to the font stack.\nPushes an identifier to the ID stack.\nChanges an item flag by pushing a change to the item flag …\nChanges the item width by pushing a change to the item …\nChanges a style color by pushing a change to the color …\nChanges style colors by pushing several changes to the …\nChanges a style variable by pushing a change to the style …\nChanges style variables by pushing several changes to the …\nChanges the text wrapping position to the end of window …\nChanges the text wrapping position by pushing a change to …\nRenders a radio button suitable for choosing an arbitrary …\nRenders a simple radio button.\nPredefined primitive UI elements &amp; render helpers.\nRenders the component.\nRenders the frame and returns a reference to the resulting …\nRenders the window context menu contents.\nResets the current delta from initial clicking position.\nCall between widgets or groups to layout them horizontally.\nCall between widgets or groups to layout them horizontally.\nCall between widgets or groups to layout them horizontally.\nReturns the maximum horizontal scrolling position.\nReturns the maximum vertical scrolling position.\nReturns the horizontal scrolling position.\nReturns the vertical scrolling position.\nRenders a separator (generally horizontal).\nSets the clipboard contents.\nInitializes current color editor/picker options (generally …\nSets the offset of the given column (in pixels from the …\nSets the width of the given column (in pixels)\nSets the offset of the current column (in pixels from the …\nSets the width of the current column (in pixels)\nSets the cursor position (in window coordinates).\nSets the cursor position (in absolute screen coordinates)\nAllows the last item to be overlapped by a subsequent item.\nMakes the last item the default focused item of the window\nFocuses keyboard on the next widget.\nFocuses keyboard on a widget relative to current position.\nSets the desired mouse cursor type.\nSets the width of the next item.\nAdjusts the horizontal scroll position to make the given …\nAdjusts the horizontal scroll position to make the given …\nAdjusts the vertical scroll position to make the given …\nAdjusts the vertical scroll position to make the given …\nAdjusts the horizontal scroll position to make the current …\nAdjusts the horizontal scroll position to make the current …\nAdjusts the vertical scroll position to make the current …\nAdjusts the vertical scroll position to make the current …\nSets the horizontal scrolling position\nSets the vertical scroll position\nSets the component’s visibility state.\nSets the font scale of the current window\nShows the component.\nRenders an about window.\nRenders a style editor block (not a window) for the …\nRenders a demo window (previously called a test window), …\nRenders a metrics/debug window.\nRenders a style editor block (not a window) for the given …\nRenders a basic help/info block (not a window)\nRenders a small clickable button that is easy to embed in …\nAdds vertical spacing\nReturns a single style color from the user interface style.\nCreates a tab bar and returns a tab bar token, allowing …\nCreates a tab bar and returns a tab bar token, allowing …\nCreates a new tab item and returns a token if its contents …\nCreates a new tab item and returns a token if its contents …\nCreates a new tab item and returns a token if its contents …\nGets the numbers of columns in the current table.\nGets the flags on the current column in the current table.\nGets the flags on the given column in the current table. …\nGets the current column index in the current table.\nGets the name of the current column. If there is no …\nGets the name of a given column. If there is no currently …\nUse this function to manually declare a column cell to be …\nAlong with table_setup_column, this method is used to …\nMoves onto the next column. If at <code>column_count</code>, this will …\nMoves a table to the next row (ie, down) with no flags, …\nMoves a  table to the next row (ie, down), with the given …\nMoves a  table to the next row (ie, down), with the given …\nGets the current row index in the current table.\nSets the given background color for this column. See …\nSets the given background color for any column. See …\nMoves onto the given column.\nSpecify label per column, with no flags and default …\nSpecify label per column, with data given in …\nLocks columns/rows so they stay visible when scrolled. …\nGets the sorting data for a table. This will be <code>None</code> when …\nRenders simple text\nRenders simple text using the given text color\nRenders simple text using <code>StyleColor::TextDisabled</code> color\nRenders text wrapped to the end of window (or column)\nReturns the global imgui-rs time.\nToggles the component’s visibility.\nConstruct a tooltip window that can have any kind of …\nConstruct a tooltip window with simple text content.\nMoves content position to the left by <code>Style::indent_spacing</code>\nMoves content position to the left by <code>width</code>\nReturns a mutable reference to the component’s …\nWindow component.\nContent boundaries max (in <em>window coordinates</em>).\nContent boundaries min (in <em>window coordinates</em>).\nReturns the position of the current window (in screen …\nReturns the size of the current window\nAn action for ordered lists in UI.\nNo action to be performed.\nDelete index.\nSwap index with next element.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Action</code>.\nPerforms the action on a <code>Vec</code>.\nRenders action buttons.\nRender state for left alignment.\nRender state for right alignment.\nStarts rendering items in left alignment.\nStarts rendering items in right alignment.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRenders the next item.\nRenders the next item.\nRenders the next item with a temporary spacing override.\nRenders the next item with a temporary spacing override.\nStarts rendering items in left alignment with a custom …\nStarts rendering items in right alignment with a custom …\nComponent for logging messages.\nWhether the log is active.\nClears the log.\nCurrent contents of the log.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAppends output to the log.\nCreates a new log.\nIcon type.\nA table column setup with icon.\nGenerates the equivalent <code>TableColumnSetup</code>.\nReturns the width of the given number of “0” …\nRenders a combo box for items from an iterator.\nRenders a combo box for an enum implementing …\nRenders a combo box for an enum implementing <code>VariantArray</code>.\nReturns the argument unchanged.\nRenders a float input with a custom format.\nRenders a custom key input.\nRenders an input for a <code>u32</code>.\nCalls <code>U::from(self)</code>.\nRenders a right-click context menu for the last item.\nCreates a new icon column.\nRenders a reset button.\nEnable small padding similar to ArcDPS and other plugins.\nRenders a table header with icon.\nRenders a table with (optional) icon headers.\nRenders a table with (optional) icon headers and sizing …\nRenders a right-click context menu for the window.\nCreates a new icon column with given flags.\nCreates a new icon column with given width/weight and id.\nCreates a 2-dimensional texture with the given description …\nCreates a 2-dimensional texture from in-memory data.\nCreates a shader resource view for the given 2-dimensional …\nAnchored to bottom left of screen, growing up &amp; right.\nAnchored to bottom right of screen, growing up &amp; left.\nAnchored to center of screen, growing centered.\nNo value.\nSome value of type <code>T</code>.\nAnchored to top left of screen, growing down &amp; right.\nAnchored to top right of screen, growing down &amp; left.\nWindow component.\nScreen anchor point for window.\nHotkey to open window.\nWindow options.\nWindow position onscreen.\nWhether to automatically resize the window according to …\nWhether to show the window body background.\nCalculates the render position.\nCalculates the render position.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHeight of the window in pixels.\nHotkey to open the window with.\nInner <code>Component</code> responsible for rendering content.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHandles a key press event.\nHandles a key press event.\nThe name (title) of the window.\nCreates new window options.\nCreates a new window with <code>WindowOptions</code> and the passed …\nCurrent window options state.\nPosition of the window.\nRenders the options menus for window style &amp; position.\nRenders a select for the window anchor.\nRenders a select for the window position.\nRenders the window style options.\nRenders the window according to the options.\nWhether to allow manually resizing the window.\nWhether to allow scrolling.\nWhether to show the scrollbar.\nWhether to show the window titlebar.\nWhether to show the window titlebar background.\nUpdates the options with values from the <code>Ui</code>\nWhether the window is (currently) visible.\nWidth of the window in pixels.\nRenders menus with window options.\nRenders window position select.\nRenders window style options.\nCreates a new window with <code>WindowOptions</code> and a default …\nUser agent used for requests.\nInformation about a GitHub repository.\nUpdate checker.\nInitiates the update check.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the current version is outdated.\nRetrieves the latest version from the latest release tag.\nCreates new repository information.\nCreates a new updater and automatically checks for updates.\nOpens the latest release.\nRenders the update window if necessary.\nResets the update check.\nCreates a new updater without checking for updates.\nConverts a keycode to the key’s name.\nConverts a key’s name to its keycode.")